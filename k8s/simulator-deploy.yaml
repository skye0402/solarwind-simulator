apiVersion: apps/v1
kind: Deployment
metadata:
  name: windsolarsim-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: windsolarsim-app
  template:
    metadata:
      labels:
        app: windsolarsim-app
        version: v1
    spec:
      containers:
      - name: windsolarsim-app
        image: gunter04/wind-solar-sim:latest
        imagePullPolicy: Always
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          requests:
            memory: 32Mi
        volumeMounts:
        - mountPath: /code/config
          name: windsolarsim-config-configmap  
        - mountPath: /code/certificates
          name: windsolarsim-certs-configmap  
      volumes:
      - name: windsolarsim-config-configmap
        configMap: 
          name: windsolarsim-configfile
      - name: windsolarsim-certs-configmap
        configMap: 
          name: windsolarsim-certsfile   
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: windsolarsim-configfile
data:
  settings.cfg: |
    [location]
    # # Hamburg
    # lat = 53.5586941
    # lon = 9.78774
    # # Augsburg
    # lat = 48.358492
    # lon = 10.7914007
    # Arai
    lat = 34.965144 # Latitude
    lon = 139.1081819 # Longitude

    [server]
    mqttServerUrl = a4042ecf-281e-4d4a-b721-c9b43461e188.eu10.cp.iot.sap
    mqttServerPort = 8883
    pemCertFilePath = ./certificates/

    [topics]
    ackTopicLevel = ack/
    measuresTopicLevel = measures/

    [devices]
    solarDevName = solar-sim-device-gunter
    windDevName = wind-sim-device-gunter

    [messages]
    solarTemplate = {{ "capabilityAlternateId": "solar-sim-capability", "sensorAlternateId": "solar-sim-sensor", "measures": [{{"insolation": "{v1}", "insolationweather": "{v2}"}}] }}
    weatherTemplate = {{ "capabilityAlternateId": "weather-capability", "sensorAlternateId": "weatherdata-sensor", "measures": [{{"windspeed": "{v1}", "windgust": "{v2}", "winddirection": "{v3}", "humidity": "{v4}", "airpressure": "{v5}", "rain": "{v6}", "snow": "{v7}", "dewpoint": "{v8}", "uvindex": "{v9}", "temperature": "{v10}"}}] }}
    windTemplate = undefined

    [timing]
    pauseInSeconds = 20 # Time until the next message is sent
    runtimeOfProgram = 0 # Time until the program stops sending (0 = Never) in minutes
    weatherTimeout = 10 # Time in minutes for cache expiry of openWeather
    smoothChange = 6 # in steps, controls the smoothing of weather value changes

    # This file contains all settings for the irrigation control
    [openweather]
    url = api.openweathermap.org/data/2.5/onecall # url for forecast call
    apiid = f31744e55f7e45b2dda03316936d3e09 #Token for authentication, change here for your token!
    exclude = minutely,hourly,alerts # Information to be excluded
    units = metric # Unit system
    lang = en # Language

    # All parameters for the solar farm go here
    [solar]

    # All parameters for the wind farm go here
    [wind]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: windsolarsim-certsfile
data:
  solar-sim-device-gunter.pem: |
    -----BEGIN RSA PRIVATE KEY-----
    MIIEowIBAAKCAQEAhk7eNxZ+HXzgWXJigJYeMlHR3tFPvMzX7OvCXwMFyf52+6qR
    LwoZxlmIserorAoCRuRt6RkJ0Dw0RJAT+zdePJa79g3wDWY6ezJ2cC6I/wGFsUKA
    91ARGwMR6Jn8ueRSgbg7aOWLgtVxFFLSR3VahbUtP12d56PSG6CSUAzCQj6rQLE/
    pUO8QNjv5Bcq/dLsJHRu4kZtfMRcvBlJIx6MepQsNz+uAzsaw00qDgPdudy9BEPv
    LVbMfxnvRHQhZkGDKs/8j6/XBUAcNfHqKl0A2gWLg+OmZStPqJoTgpcjOq0/LQa7
    5xMKG8tFcZ0keV1n/FAm5tKFn15k1g7LmEXaMwIDAQABAoIBAFf5cTVEVneaRJpS
    gpMXwc/UKFR7Zm+U/hsCkt8Ja9FUDTvsDg1x4FA8dX2VEbMfGz60ggodjIAJ73K5
    rVzwd5nYYmZZ2tPsEoKAG3SABtyCcsAZf8B/gbTf3esucoyRMjomI0Qil6+rf9aA
    KZ0FEbZjZrAK8lO4yvetxikJMnWRAwYQZyE/CNXd0uTVB/lxMJ3ETPrpA2KeVE7l
    Hmy+GZeCtKDaHiR7oEbZYSdetMnkV3iVm+nORBaezs5GrC9nwfaExRhpYsuVM8ID
    UwHUScfgsXeCRPswDbZXPsLI9W0SMWhaupGprsVzLyYP27dIDJjri+aXjeLl16Lw
    ei/lNoECgYEAzY5P1Qskw2cVMAXHQabG9owgY+akgEbdPjJV3SGONFks52cvT1XE
    IpQ1mfvS7V1PT5JNyj24cwKBFh8cp+G3NLNP5E4slmYQc9E9g5M6YYRSzJ7RVla1
    UwU9Bmi7tw/RBpIcdQowJ+I+zUi3okp0zrcdUCn+0KV5kMC0bp299IcCgYEAp0SJ
    aYrpw/YQOHU2W/F4Sp3VRFUYuqqV+YiP6dkg3HA9Hj5fMGjNe6bgXWaigaDQyGUA
    nPjomG6Nv2arL+qEGKmmGKeFYVHaEu33KWXz5Rs9zk2f7izeUYUWUVvWsr0uq1PC
    FuPr8hGnQPRUFac0hsD/26+8BGUeZYowTVQIw/UCgYB1tlttKxaAd9WgTI7Qv8sM
    gS5DR19IvkwQRA77tS2UOMUINwTWr8zD6I/RgG5H07mJXcUCXdn0sqhtnJ9yXEXn
    /g9wNHxAHG6rhFVvta4nDfnEh+ZlRP5NbqCFvRBSQtJ2qtF1DMKK9Hr2YAAZBf5i
    Kma083ei0EAPbutktRyEnQKBgHip02rkwAASSN9BhwZKqllBhLC3ppA6MNiC8DZk
    4PTErwJbQjXc1Kbn2iDmwkI67YIygn+6e6hC0FSLzuBREBvufhh4+Joc/vD643rk
    xk23Gh3yF3YsvfAWzuPAGaB1Iu6LDI+Qugu1Om98EhBQv26aWbh0DHErNQNQ7clK
    3svlAoGBAKhVvymlZhJgMvIWz0SAFNzn5zbeM4gcNn20tCSA2NArDdQLV/eRM/Fm
    /Ne3YBv9/9k92x2V81yAanK57dKOhNJZ5ma8fQnQYXO0AkiPGY/bOxHk3Solsluk
    1Eig8E0SOvZWmFqLK1/tNLyAn+nj2etPeAf9bwhUS5YwxmZE6zNe
    -----END RSA PRIVATE KEY-----
    -----BEGIN CERTIFICATE-----
    MIIEezCCA2OgAwIBAgIPZ/RHRtia88EQAQcAvEZkMA0GCSqGSIb3DQEBCwUAMFYx
    CzAJBgNVBAYTAkRFMSMwIQYDVQQKExpTQVAgSW9UIFRydXN0IENvbW11bml0eSBJ
    STEiMCAGA1UEAxMZU0FQIEludGVybmV0IG9mIFRoaW5ncyBDQTAeFw0yMTA5MjQw
    MTQ1MzVaFw0yMjA5MjQwMTQ1MzVaMIHIMQswCQYDVQQGEwJERTEcMBoGA1UEChMT
    U0FQIFRydXN0IENvbW11bml0eTEVMBMGA1UECxMMSW9UIFNlcnZpY2VzMYGDMIGA
    BgNVBAMUeWRldmljZUFsdGVybmF0ZUlkOnNvbGFyLXNpbS1kZXZpY2UtZ3VudGVy
    fGdhdGV3YXlJZDoyfHRlbmFudElkOjE5NTQ1MTU1MDV8aW5zdGFuY2VJZDphNDA0
    MmVjZi0yODFlLTRkNGEtYjcyMS1jOWI0MzQ2MWUxODgwggEiMA0GCSqGSIb3DQEB
    AQUAA4IBDwAwggEKAoIBAQCGTt43Fn4dfOBZcmKAlh4yUdHe0U+8zNfs68JfAwXJ
    /nb7qpEvChnGWYix6uisCgJG5G3pGQnQPDREkBP7N148lrv2DfANZjp7MnZwLoj/
    AYWxQoD3UBEbAxHomfy55FKBuDto5YuC1XEUUtJHdVqFtS0/XZ3no9IboJJQDMJC
    PqtAsT+lQ7xA2O/kFyr90uwkdG7iRm18xFy8GUkjHox6lCw3P64DOxrDTSoOA925
    3L0EQ+8tVsx/Ge9EdCFmQYMqz/yPr9cFQBw18eoqXQDaBYuD46ZlK0+omhOClyM6
    rT8tBrvnEwoby0VxnSR5XWf8UCbm0oWfXmTWDsuYRdozAgMBAAGjgdIwgc8wSAYD
    VR0fBEEwPzA9oDugOYY3aHR0cHM6Ly90Y3MubXlzYXAuY29tL2NybC9UcnVzdENv
    bW11bml0eUlJL1NBUElvVENBLmNybDAMBgNVHRMBAf8EAjAAMCUGA1UdEgQeMByG
    Gmh0dHA6Ly9zZXJ2aWNlLnNhcC5jb20vVENTMA4GA1UdDwEB/wQEAwIGwDAdBgNV
    HQ4EFgQU1rP85LAH1SvXXksA3wOPwu5SD4EwHwYDVR0jBBgwFoAUlbez9Vje1bSz
    WEbg8qbJeE69LXUwDQYJKoZIhvcNAQELBQADggEBADyY7wFj5w8tlVeL34ZOQW7n
    0UHUMLD7HXX1Zyqw4vQ0YyaIU2Kiv+YYLGCXVaYwfWJm9FXhGlGj9Omy+JkCvEfP
    VRDPGJOiJwNTxGMnfTdyydoTl8XMlC/8x5boz4tYqV2TnOSQTIYXYHeQ/Tjh3GdZ
    OI20JtWcwSmiIOTU7pzfBuYkPpvQRLZ1ma1eBR2dYlv5Y2vXrlcUdWyM63tTdHoB
    U4oP76fhe+3VGohrqjMEwfpbgBMgcb8wPzRqDTklDCCcJsqizFtQiEGGBT7+6uDf
    8es6FUNVnI0s/SyFuUJxTyVfhXvAvysjNEUq1lxGwHujnO+ECqGl55sZ9xwzdxY=
    -----END CERTIFICATE-----