apiVersion: apps/v1
kind: Deployment
metadata:
  name: windsolarsim-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: windsolarsim-app
  template:
    metadata:
      labels:
        app: windsolarsim-app
        version: v1
    spec:
      containers:
      - name: windsolarsim-app
        image: gunter04/wind-solar-sim:latest
        imagePullPolicy: Always
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          requests:
            memory: 32Mi
        volumeMounts:
        - mountPath: /code/config
          name: windsolarsim-config-configmap  
        - mountPath: /code/certificates
          name: windsolarsim-certs-configmap  
      volumes:
      - name: windsolarsim-config-configmap
        configMap: 
          name: windsolarsim-configfile
      - name: windsolarsim-certs-configmap
        configMap: 
          name: windsolarsim-certsfile   
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: windsolarsim-configfile
data:
  settings.cfg: |
    [location]
    # # Hamburg
    # lat = 53.5586941
    # lon = 9.78774
    # # Augsburg
    # lat = 48.358492
    # lon = 10.7914007
    # Arai
    lat = 34.965144 # Latitude
    lon = 139.1081819 # Longitude

    [server]
    mqttServerUrl = 70598882-95c9-4202-b612-268781466fe3.eu10.cp.iot.sap
    mqttServerPort = 8883
    pemCertFilePath = ./certificates/

    [topics]
    ackTopicLevel = ack/
    measuresTopicLevel = measures/

    [devices]
    solarDevName = solar-sim-device
    windDevName = wind-sim-device
    weatherDevName = WEATHER_STATION

    [messages]
    solarTemplate = {{ "capabilityAlternateId": "solar-sim-capability", "sensorAlternateId": "solar-sim-sensor", "measures": [{{"insolation": "{v1}", "insolationweather": "{v2}", "theoreticaloutput": "0.0", "moduletemperature": "0.0" }}] }}
    weatherTemplate = {{ "capabilityAlternateId": "weather-capability", "sensorAlternateId": "weatherdata-sensor", "measures": [{{"windspeed": "{v1}", "windgust": "{v2}", "winddirection": "{v3}", "humidity": "{v4}", "airpressure": "{v5}", "rain": "{v6}", "snow": "{v7}", "dewpoint": "{v8}", "uvindex": "{v9}", "temperature": "{v10}"}}] }}
    windTemplate = undefined

    [timing]
    pauseInSeconds = 20 # Time until the next message is sent
    runtimeOfProgram = 0 # Time until the program stops sending (0 = Never) in minutes
    weatherTimeout = 10 # Time in minutes for cache expiry of openWeather
    smoothChange = 6 # in steps, controls the smoothing of weather value changes

    # This file contains all settings for the irrigation control
    [openweather]
    url = api.openweathermap.org/data/2.5/onecall # url for forecast call
    apiid = f31744e55f7e45b2dda03316936d3e09 #Token for authentication, change here for your token!
    exclude = minutely,hourly,alerts # Information to be excluded
    units = metric # Unit system
    lang = en # Language

    # All parameters for the solar farm go here
    [solar]

    # All parameters for the wind farm go here
    [wind]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: windsolarsim-certsfile
data:
  WEATHER_STATION.pem: |
    -----BEGIN RSA PRIVATE KEY-----
    MIIEogIBAAKCAQEAuJ5/Z7pYNJ1ymrJUSULvPkYEGjfeZorfK5CCpJMn8xclaPwn
    48xrWzgGuBO7atIZQPpRG0CPpnOXb9IGPl2wlTQKUCobCr7BAxbbEnTMgiQtEA4v
    NdQ6gBDHNulEJfZa/nsU4ZX1laMGCeEro/U9EDTQEo6C36TcHpH5odPEUwJ4muaZ
    tG45rxje9MEFQjPvBD61IVVC8cbRgHHcot/9YrDOmcYriKPrXFfSPRrwFDnMiql4
    gtJipe3+qshXHFn5JWFzYE4kCPJ3VPUAfinNqbqB92XxNVJO1eOgBRMfMxx5R7d2
    L79y2wcVWzSgcodiOiU4annwJHFiWCts/f0yzQIDAQABAoIBAEbEMm/vRNo+M+zK
    SHagmpYTPoVSPwStXKgVR46P/bM3fxaD+UJfXBNmIWUz4xYqHJYEnUxF7gpOqpCp
    P81uGj7G6OEbkqwGvHNTsnubm7yS41cRKNWIWTg3tjT9KysmCHEder6RvcYy7CCj
    WBgL6/EnXU6Po+jYB6wMJlT6mHl8hIXllhv2yrC0a92YUxoVzLHdRIDa0oc7IVN0
    CvBjyyRgdw1D9h/mxC5n8mMaEg3Kb6ASPo+AipfbuT9IjGpVtcUDe+zzS0BMebkM
    6UFYTMzXu8hTrWPnDQBuVej7XtfYgocCtz4y23pJmRSw9dCSdT4YOj2irPwJ8N9f
    ihRv2GECgYEA7/UnEAJedyRDnQ1D9zQuJjZ3WEjsYQNJh1SueIbMuboX0c97DH6i
    nklVUKOwAE7Y4g7l6ghgxd4lkkE9yzVPGfKMAmig01yRLsK/Oh+Qb3cXPhR95+Iq
    K53Y/S5rd+rJ1C6bLEPbYn/eUAl1zrk3im1uJyKoJBDjxAZLWGG0D/kCgYEAxPY7
    qQa6Chs72fLw3WZ6io1qMh1WC9hmRgR0PG7WIpvFhC+wx4sXbJeeqPxatiJKzEXq
    7UjlS8fkSz3V4Qlfowke6A++wm+gQF9aJG1HOCzIaf0aGI3R7OhrGPnMt/42bu3o
    5QOk8jXpXFJjEUHf1tDTzUJZFRCeeYc9XIGGlnUCgYAeb/FRhYtn/3CYJkudur+z
    1yrSRwW81IbqJKKw5SBo2qMU2QWZsyJ7g3/P58N2donqOsuNIRztXF1VrPLiqNNs
    zihWUeE8jjxYOxm4jLJsgSWwmTbTSAvjVnVkwBOftWd+g57pQX49g0y2yExqOXJD
    G9hiHHJJiN7rSYUbI+GMOQKBgA0FrqodPL2gUVO2oUAyH1X7xZKsp9y+oPxuHPVF
    6rh9DhEQSiLXSmQunhnUHXc/Syy4TrEDic152Nk0rGhlg0I3PyjeqaEXWkQHSeFw
    rC3FoDaJumj3L3L3ZuVO1r8veo/ZAPXrSMOO1u/4rn4cmd0ND4PZqCQhZijozSDJ
    m4llAoGAF1Zv+dDDKGvMd/xN+20zCkm0Lb/mRoClDMh+V//74iWFAtGXq3t8V/XU
    Xs1DfmgFqD+1JLNnpi6R9rkG/yNJ/WCMwHeJ+PkMly81IbqEfJTG44oQ0H8TVJRs
    4SkVd3HFkeL1pBgg54UJWmExlvq83PsXogqKQO1Vqj2hbf7IhpY=
    -----END RSA PRIVATE KEY-----
    -----BEGIN CERTIFICATE-----
    MIIEbjCCA1agAwIBAgIPWP+yFdVIN8cQAQcAuwxHMA0GCSqGSIb3DQEBCwUAMFYx
    CzAJBgNVBAYTAkRFMSMwIQYDVQQKExpTQVAgSW9UIFRydXN0IENvbW11bml0eSBJ
    STEiMCAGA1UEAxMZU0FQIEludGVybmV0IG9mIFRoaW5ncyBDQTAeFw0yMTA5MDgw
    ODM5MjdaFw0yMjA5MDgwODM5MjdaMIG7MQswCQYDVQQGEwJERTEcMBoGA1UEChMT
    U0FQIFRydXN0IENvbW11bml0eTEVMBMGA1UECxMMSW9UIFNlcnZpY2VzMXcwdQYD
    VQQDFG5kZXZpY2VBbHRlcm5hdGVJZDpURU5BTlRfUk9VVEVSfGdhdGV3YXlJZDoy
    fHRlbmFudElkOjMzOTkxMTIyMnxpbnN0YW5jZUlkOjcwNTk4ODgyLTk1YzktNDIw
    Mi1iNjEyLTI2ODc4MTQ2NmZlMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
    ggEBALief2e6WDSdcpqyVElC7z5GBBo33maK3yuQgqSTJ/MXJWj8J+PMa1s4BrgT
    u2rSGUD6URtAj6Zzl2/SBj5dsJU0ClAqGwq+wQMW2xJ0zIIkLRAOLzXUOoAQxzbp
    RCX2Wv57FOGV9ZWjBgnhK6P1PRA00BKOgt+k3B6R+aHTxFMCeJrmmbRuOa8Y3vTB
    BUIz7wQ+tSFVQvHG0YBx3KLf/WKwzpnGK4ij61xX0j0a8BQ5zIqpeILSYqXt/qrI
    VxxZ+SVhc2BOJAjyd1T1AH4pzam6gfdl8TVSTtXjoAUTHzMceUe3di+/ctsHFVs0
    oHKHYjolOGp58CRxYlgrbP39Ms0CAwEAAaOB0jCBzzBIBgNVHR8EQTA/MD2gO6A5
    hjdodHRwczovL3Rjcy5teXNhcC5jb20vY3JsL1RydXN0Q29tbXVuaXR5SUkvU0FQ
    SW9UQ0EuY3JsMAwGA1UdEwEB/wQCMAAwJQYDVR0SBB4wHIYaaHR0cDovL3NlcnZp
    Y2Uuc2FwLmNvbS9UQ1MwDgYDVR0PAQH/BAQDAgbAMB0GA1UdDgQWBBTzyy/x8jUo
    AMteXDwEKeqcONUiIjAfBgNVHSMEGDAWgBSVt7P1WN7VtLNYRuDypsl4Tr0tdTAN
    BgkqhkiG9w0BAQsFAAOCAQEArcqZrc8hLhDYbV7fw+i6uHBYK6eihTXHRnEUU07j
    pihAp+vIebwA1sOsoVjciI0lIfWespwUXH3dyZaY/eyKvwefCoLTCOKM6UTqdU2f
    HFV1eaOlKp3qiMnM7pLlT/lbZGEmEKa7ZhovN6JBCKyi+ERFIeVcHSv3jF6Vc9pS
    KX56ecnXp23U+XaaSEHn3/ke1AO4wCUtopbZkNl3m9ULB+ZnJn5JqoGdqKWJ2ZzL
    53ba7yRflWd3WRaZWihWCVaQwntFk8r1H4MUx7w6+0KZsUnMtzYCM08VXPzfbcjQ
    ioyAE34J3k7eu0mVUcXOC4a212CYNWFdhISp2aMFa5nSRQ==
    -----END CERTIFICATE-----